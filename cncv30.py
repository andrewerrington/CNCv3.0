#//Source & info:
#//http://www.homofaciens.de/technics-machines-cnc-v3-0_en_navion.htm

#Python version under construction
#by A. M. Errington October 2016

import pigpio
import time

font = {}
#A
font["A"]=( ((0,56), (21,1), (29,1), (51,56), (43,56), (37,40) , (14,40), (8,56), (0,56)),
            ((16,33), (34,33), (28,18), (26,11), (25,9), (25,7), (24,9), (23,12), (22,14), (22,17), (16,33)) )

#B
font["B"]=( ((0,55,0,0,21,0,22,0,24,0,25,0,27,1,28,1,29,1,30,1,31,2,31,3,33,3,33,3,34,4,35,4,36,6,36,6,37,7,37,8,37,9,38,10,38,10,39,12,39,12,39,13,39,14,39,15,39,16,39,17,39,18,38,18,38,19,37,20,37,21,36,22,36,22,35,23,34,24,34,24,33,25,32,25,31,26,33,26,34,27,34,27,36,28,36,28,37,29,38,30,39,31,39,31,40,33,40,34,41,34,41,36,42,37,42,38,42,39,42,40,42,41,41,42,41,43,41,43,40,45,40,45,40,46,39,47,39,48,39,48,38,49,37,50,37,51,36,51,36,51,35,52,34,52,34,52,33,53,33,53,31,54,31,54,30,54,29,54,28,54,27,55,26,55,24,55,21,55,0,55)),
            ((7,23,19,23,21,23,24,22,24,22,25,22,25,22,26,22,27,22,27,22,28,21,28,21,29,21,30,20,30,20,30,19,31,19,31,18,31,18,31,17,31,16,31,16,31,15,31,15,31,14,31,13,31,13,31,12,31,12,31,11,31,10,30,10,30,9,30,9,29,9,29,8,28,8,28,7,27,7,27,7,26,7,25,7,24,6,24,6,21,6,18,6,7,6,7,23)),
            ((7,48,21,48,22,48,24,48,25,48,25,48,26,48,27,48,27,48,28,48,28,48,29,48,29,47,30,47,30,46,31,46,31,46,31,46,31,45,32,45,32,45,33,44,33,43,33,43,33,43,34,42,34,42,34,41,34,40,34,40,34,39,34,38,34,37,34,37,34,36,33,36,33,35,33,34,33,34,32,33,31,33,31,32,31,32,30,31,30,31,29,31,28,31,27,30,27,30,25,30,25,30,24,30,22,30,20,30,7,30,7,48)) )

#C
font["C"]=( ((41,37), (49,38), (48,40), (47,43), (46,44), (45,46), (44,48),
             (43,49), (42,50), (40,52), (39,53), (37,54), (36,55), (34,55),
             (32,56), (30,56), (28,56), (26,56), (24,56), (22,56), (20,56),
             (18,56), (17,55), (15,55), (13,54), (12,53), (11,52), (9,51),
             (8,50), (7,49), (6,47), (5,46), (4,44), (3,43), (3,41), (2,39),
             (2,37), (1,35), (1,34), (0,32), (0,30), (0,28), (0,26), (0,24),
             (1,22), (1,20), (2,18), (2,16), (3,14), (3,13), (5,11), (5,10),
             (6,8), (8,7), (9,6), (10,5), (11,4), (13,4), (14,2), (16,2),
             (18,1), (19,1), (21,1), (23,0), (24,0), (26,0), (28,0), (30,0),
             (32,1), (34,1), (35,2), (37,2), (39,3), (40,4), (41,5), (42,7),
             (43,8), (45,9), (45,11), (46,13), (47,14), (48,16), (40,17),
             (40,16), (39,15), (39,14), (38,13), (37,11), (37,10), (36,10),
             (35,9), (34,8), (33,8), (32,7), (31,7), (30,7), (28,7), (27,6),
             (26,6), (24,6), (23,7), (21,7), (20,7), (19,7), (18,8), (17,8),
             (15,9,14,10,14,11,12,12,12,13,11,14,11,15,10,16,9,17,9,19,9,20,9,21,8,23,8,24,8,25,8,26,8,28,8,29,8,31,8,33,8,34,9,36,9,37,9,38,10,40,11,41,11,43,12,44,12,44,14,46,14,46,15,47,16,48,17,49,18,49,20,49,21,50,22,50,23,50,24,50,26,50,27,50,28,50,30,50,31,50,32,49,33,49,34,47,36,47,37,46,37,45,39,44,39,43,40,41,40,40,41,38,41,37)) )
''' 
//D
const unsigned char PROGMEM coords_D_01[]={0,55,0,0,19,0,22,0,25,0,27,1,28,1,29,1,30,1,31,1,32,2,33,3,34,3,35,4,36,4,37,5,38,6,39,7,40,8,40,9,42,10,42,12,43,13,43,14,44,16,44,17,45,19,45,21,45,22,45,24,45,25,45,27,45,30,45,32,45,33,45,34,45,36,44,37,44,39,43,39,43,40,43,42,42,43,42,43,41,45,41,45,40,46,40,47,39,48,39,48,38,49,37,49,37,50,36,51,35,51,34,52,34,52,33,52,32,53,31,53,31,54,30,54,29,54,28,54,27,54,25,55,25,55,22,55,20,55,0,55};
const unsigned char PROGMEM coords_D_02[]={7,48,19,48,22,48,23,48,24,48,25,48,26,48,27,47,28,47,28,47,29,46,30,46,30,46,31,45,31,45,32,45,33,44,33,43,34,43,34,42,35,41,35,40,36,39,36,38,36,37,37,36,37,35,37,34,37,33,37,31,38,30,38,27,38,25,38,22,37,21,37,19,37,18,36,16,36,15,35,13,34,12,34,12,33,10,32,10,31,9,30,8,29,8,28,7,27,7,27,7,25,7,24,6,23,6,22,6,19,6,7,6,7,48};

//E
const unsigned char PROGMEM coords_E_01[]={0,55,0,0,40,0,40,7,7,7,7,24,37,24,37,30,7,30,7,48,41,48,41,55,0,55};

//F
const unsigned char PROGMEM coords_F_01[]={0,55,0,0,37,0,37,7,7,7,7,24,33,24,33,30,7,30,7,55,0,55};

//G
const unsigned char PROGMEM coords_G_01[]={28,34,28,28,50,28,50,48,49,49,48,50,47,51,45,52,44,53,43,53,41,54,40,55,38,55,37,55,35,56,34,56,32,56,31,56,29,56,28,56,26,56,24,56,22,56,20,56,19,55,17,55,15,54,13,53,11,52,10,51,9,50,8,49,7,47,5,46,4,45,4,43,2,41,2,40,1,38,1,36,1,34,0,32,0,31,0,29,0,26,0,25,1,23,1,21,1,19,2,17,2,16,4,14,4,12,5,10,6,9,7,8,8,7,10,5,11,4,13,4,14,2,16,2,18,1,20,1,22,1,23,0,25,0,28,0,29,0,30,0,32,0,33,1,34,1,35,1,37,1,38,2,39,2,40,3,41,4,43,4,43,5,44,5,45,7,46,7,46,8,47,9,47,10,48,11,49,13,49,14,49,15,50,16,43,18,43,17,43,16,42,15,42,14,41,14,41,13,41,12,40,11,40,11,39,10,38,10,38,10,37,9,37,8,36,8,35,8,34,7,33,7,32,7,31,7,31,7,29,6,28,6,28,6,26,6,25,6,24,7,23,7,22,7,21,7,20,7,19,8,18,8,17,8,16,9,16,10,15,10,14,11,14,11,13,11,13,13,12,13,11,14,11,14,11,15,10,16,10,16,10,17,9,19,8,20,8,21,8,22,8,24,8,25,7,26,7,28,7,30,8,32,8,33,8,35,8,37,9,38,10,39,10,40,11,41,11,43,12,44,13,44,14,46,15,46,16,47,17,47,19,48,20,49,21,49,22,49,23,50,25,50,26,50,28,50,29,50,30,50,31,50,32,50,33,49,34,49,35,49,37,48,39,47,40,47,41,46,41,46,42,46,43,45,43,44,43,34,28,34};

//H
const unsigned char PROGMEM coords_H_01[]={0,55,0,0,7,0,7,22,35,22,35,0,43,0,43,55,35,55,35,29,7,29,7,55,0,55};

//I
const unsigned char PROGMEM coords_I_01[]={0,55,0,0,8,0,8,55,0,55};

//J
const unsigned char PROGMEM coords_J_01[]={0,39,6,39,6,40,6,42,7,43,7,44,7,45,7,45,7,46,8,46,8,46,8,47,9,47,9,48,9,48,9,48,10,48,10,48,10,48,10,49,11,49,12,49,12,49,13,49,13,49,14,49,15,49,16,49,16,49,17,49,18,49,18,49,18,48,19,48,19,48,20,48,20,47,21,46,21,46,21,46,21,45,22,45,22,44,22,43,22,43,22,42,22,40,22,38,22,0,30,0,30,37,30,39,30,40,30,42,29,43,29,45,29,46,28,47,28,48,28,49,27,50,27,51,26,51,25,52,24,53,24,54,23,54,22,54,21,55,20,55,19,55,18,55,16,55,15,56,14,56,13,56,11,55,9,55,9,55,8,55,7,55,7,54,6,54,6,54,5,53,4,52,4,52,3,52,3,51,3,51,2,50,1,49,1,49,1,48,1,47,0,46,0,45,0,43,0,42,0,39};

//K
const unsigned char PROGMEM coords_K_01[]={0,55,0,0,8,0,8,27,35,0,45,0,21,22,45,55,36,55,17,27,8,36,8,55,0,55};

//L
const unsigned char PROGMEM coords_L_01[]={0,55,0,0,7,0,7,48,34,48,34,55,0,55};

//M
const unsigned char PROGMEM coords_M_01[]={0,55,0,0,11,0,24,39,27,47,30,38,43,0,52,0,52,55,45,55,45,9,30,55,23,55,7,9,7,55,0,55};

//N
const unsigned char PROGMEM coords_N_01[]={0,55,0,0,7,0,36,43,36,0,43,0,43,55,35,55,7,12,7,55,0,55};

//O
const unsigned char PROGMEM coords_O_01[]={0,29,0,26,1,23,2,20,2,17,3,16,3,14,4,13,5,12,5,11,6,10,7,8,8,8,9,7,9,6,11,5,12,4,12,4,14,3,15,2,16,2,17,1,18,1,20,1,21,1,24,0,27,0,29,0,30,0,32,1,34,1,35,1,37,2,39,3,40,4,42,5,43,5,44,7,45,8,47,9,48,11,48,12,50,14,50,16,51,17,51,19,52,20,52,22,52,25,52,26,52,28,52,31,52,32,52,34,52,36,51,38,51,40,50,41,50,43,48,45,47,46,47,48,45,49,44,50,43,52,41,52,40,53,38,54,36,55,35,55,33,56,32,56,30,56,28,56,27,56,24,56,23,56,21,56,19,56,18,55,16,55,14,54,13,53,11,52,10,51,9,50,8,49,6,47,5,46,5,44,3,43,3,41,2,40,2,38,1,36,1,34,0,32,0,31,0,29};
const unsigned char PROGMEM coords_O_02[]={8,29,8,31,9,34,9,36,9,38,10,40,11,41,11,41,12,42,12,43,13,44,14,44,15,46,15,46,17,47,17,47,18,48,18,49,20,49,20,49,21,49,22,50,23,50,25,50,27,50,29,50,31,50,32,50,33,49,33,49,34,49,35,49,36,48,37,47,38,47,38,46,39,46,40,44,41,44,42,43,42,42,42,41,43,40,44,40,44,37,45,35,45,33,45,31,45,28,45,26,45,25,45,23,45,22,45,20,44,19,44,18,43,16,43,15,42,14,41,13,41,12,39,11,39,10,38,10,37,9,36,8,35,8,33,7,32,7,31,7,30,6,28,6,27,6,25,6,23,7,21,7,20,7,18,8,17,9,15,10,14,11,13,12,12,13,12,14,11,14,11,15,11,16,10,17,9,19,9,20,9,23,8,26,8,29};

//P
const unsigned char PROGMEM coords_P_01[]={0,55,0,0,20,0,23,0,25,0,28,0,28,1,29,1,30,1,31,1,32,1,32,1,34,2,34,3,35,3,35,3,37,4,37,4,38,5,38,6,38,6,39,7,40,8,40,9,40,9,41,10,41,11,41,12,41,13,41,14,41,15,42,16,41,18,41,19,41,21,41,22,40,24,39,25,38,27,37,28,37,28,36,29,35,30,35,30,34,30,33,31,32,31,31,31,29,32,26,33,24,33,21,33,7,33,7,55,0,55};
const unsigned char PROGMEM coords_P_02[]={7,26,22,26,23,26,25,25,26,25,28,25,29,25,29,25,29,24,30,24,31,24,31,24,31,23,32,23,32,22,32,22,32,22,33,21,33,21,33,21,34,20,34,19,34,19,34,18,34,17,34,16,34,15,34,14,34,13,34,13,34,12,33,11,33,10,32,10,32,9,32,9,31,9,31,8,30,7,29,7,29,7,28,7,28,7,27,6,26,6,25,6,23,6,21,6,7,6,7,26};

//Q
const unsigned char PROGMEM coords_Q_01[]={43,50,46,52,48,53,49,53,50,54,52,55,53,55,50,60,49,59,47,59,46,58,45,57,43,56,42,55,40,55,39,53,37,54,36,55,34,55,32,56,31,56,29,56,27,56,25,56,24,56,22,56,20,56,19,56,17,55,15,55,13,54,12,53,10,52,9,51,8,50,7,49,6,47,4,46,4,44,3,43,2,41,1,40,1,38,0,36,0,34,0,32,0,31,0,28,0,26,0,25,0,22,0,20,1,19,1,17,2,15,3,14,4,12,4,10,6,9,7,8,8,7,9,5,11,4,12,4,14,2,15,2,17,1,19,1,21,1,22,0,24,0,26,0,28,0,29,0,31,1,33,1,34,1,36,2,38,3,39,4,41,5,42,5,43,7,44,8,46,9,47,11,47,12,49,14,49,16,50,17,50,19,51,20,51,22,52,25,52,26,52,28,52,30,52,32,52,33,51,35,51,36,50,38,50,39,50,40,49,42,49,43,48,44,47,46,46,47,46,48,44,49,43,50};
const unsigned char PROGMEM coords_Q_02[]={27,40,29,41,30,41,32,42,33,43,34,43,35,44,37,45,38,46,38,45,39,44,40,43,40,42,41,41,41,40,42,40,43,38,43,37,43,36,44,34,44,31,44,28,44,26,44,25,44,23,43,22,43,20,43,19,42,18,41,16,41,15,40,14,40,13,39,12,38,11,37,10,36,10,35,9,34,8,33,8,32,7,31,7,29,7,28,6,27,6,25,6,24,6,22,7,21,7,20,7,19,7,18,7,18,8,16,8,16,8,15,9,14,10,13,10,12,11,12,12,11,13,10,14,10,14,9,16,9,16,9,17,8,19,7,20,7,23,7,25,7,28,7,31,7,33,7,35,8,38,9,40,9,40,10,41,10,42,11,43,12,44,12,44,13,46,14,46,15,47,16,47,16,48,17,49,18,49,19,49,20,49,21,50,22,50,24,50,25,50,27,50,27,50,28,50,29,50,30,50,31,49,32,49,32,49,32,48,31,48,30,47,29,47,28,46,28,46,27,46,26,46,27,40};

//R
const unsigned char PROGMEM coords_R_01[]={0,55,0,0,24,0,28,0,30,0,31,1,32,1,33,1,34,1,36,1,36,2,37,3,38,3,39,4,40,4,40,5,41,6,42,7,42,8,43,9,43,10,43,11,43,12,44,13,44,14,44,15,44,16,43,18,43,19,43,21,42,22,42,23,41,24,40,25,40,25,39,26,39,27,38,27,37,28,36,28,34,29,32,30,30,30,28,30,30,31,31,31,31,32,32,32,33,33,33,33,34,33,34,34,35,35,36,36,37,38,39,40,48,55,39,55,32,43,29,39,28,37,27,36,26,35,25,34,25,34,24,33,24,33,24,33,23,33,23,32,22,32,22,31,22,31,21,31,21,31,20,31,20,31,19,31,19,31,18,31,17,31,16,31,7,31,7,55,0,55};
const unsigned char PROGMEM coords_R_02[]={8,24,24,24,26,24,27,24,28,24,29,24,30,24,31,24,31,23,32,23,33,22,33,22,34,22,34,22,35,21,35,21,36,20,36,19,36,19,36,18,37,18,37,17,37,16,37,16,37,15,37,14,37,13,37,13,37,13,37,12,36,12,36,12,36,11,36,11,36,10,36,10,35,10,35,9,34,9,34,9,33,8,33,8,33,7,32,7,31,7,31,7,30,7,28,6,27,6,25,6,8,6,8,24};

//S
const unsigned char PROGMEM coords_S_01[]={0,38,6,37,7,38,7,40,7,40,8,41,8,42,8,43,8,43,9,44,9,45,10,46,11,46,11,47,12,47,12,47,14,48,14,49,15,49,16,49,17,49,18,50,20,50,20,50,21,50,23,50,24,50,25,50,26,50,27,50,27,50,29,49,29,49,30,49,31,49,32,48,32,48,33,47,33,47,34,46,35,46,35,46,35,45,35,44,36,44,36,43,36,43,36,42,36,41,36,41,36,40,36,40,36,39,36,38,36,38,35,37,35,37,35,36,35,36,34,35,33,35,33,34,32,34,32,34,31,34,30,33,29,33,29,32,26,32,20,31,17,29,14,29,12,28,11,28,11,28,9,27,9,26,8,26,7,25,6,25,6,24,5,23,5,23,4,22,3,21,3,20,3,19,2,19,2,18,2,17,2,16,2,15,2,14,2,13,2,12,2,11,3,10,3,9,3,8,4,7,5,7,6,5,6,5,7,4,8,4,9,3,10,2,11,2,12,1,14,1,15,1,16,1,17,0,18,0,20,0,21,0,23,0,24,0,26,0,27,1,28,1,29,1,30,2,32,2,33,2,34,3,35,4,36,4,37,5,38,6,38,7,39,8,39,8,40,10,41,11,41,12,41,13,41,14,42,15,42,16,35,17,35,16,34,14,34,13,33,13,33,12,33,11,33,11,32,11,32,10,32,10,32,10,31,9,30,9,30,8,30,8,29,8,28,7,27,7,26,7,24,7,23,7,21,7,20,7,18,7,17,7,16,7,15,7,14,8,13,8,12,8,12,8,12,9,11,10,11,10,11,10,10,10,10,11,10,11,9,11,9,12,9,12,9,13,9,13,9,13,9,14,9,14,9,14,9,16,9,16,9,16,9,16,9,17,9,17,9,17,9,17,9,18,10,18,10,19,10,19,11,19,11,19,11,20,12,20,12,20,12,20,14,21,15,22,16,22,18,22,22,23,26,24,29,25,32,26,33,26,34,27,35,28,36,28,37,29,38,29,39,30,40,31,41,32,41,32,42,33,42,34,42,35,43,36,43,37,43,38,43,39,44,40,43,41,43,43,43,43,42,44,42,46,42,46,41,47,41,49,40,49,39,50,39,51,38,52,37,53,36,53,35,54,33,55,32,55,31,55,30,56,29,56,27,56,26,56,24,56,23,56,21,56,20,56,18,56,16,56,15,56,14,55,12,55,11,55,9,54,8,53,7,52,6,52,5,51,5,50,3,49,3,48,2,47,2,46,1,44,1,43,1,42,0,41,0,40,0,38};

//T
const unsigned char PROGMEM coords_T_01[]={18,55,18,7,0,7,0,0,43,0,43,7,25,7,25,55,18,55};

//U
const unsigned char PROGMEM coords_U_01[]={36,0,43,0,43,32,43,34,42,36,42,37,42,39,42,41,42,42,41,43,41,45,41,46,40,47,39,48,38,49,38,50,36,51,35,52,34,53,33,54,32,54,30,55,29,55,27,55,25,55,23,56,21,56,20,56,18,55,16,55,14,55,13,55,11,54,10,54,9,53,8,52,6,52,6,51,5,50,4,49,3,48,2,47,2,45,2,44,1,43,0,41,0,40,0,38,0,36,0,34,0,32,0,0,7,0,7,32,7,35,7,37,8,38,8,39,8,40,8,42,8,42,9,43,9,44,9,45,10,45,11,46,11,46,12,47,13,48,14,48,15,48,15,49,17,49,17,49,18,49,20,49,21,49,23,49,24,49,26,49,27,48,29,48,29,48,30,48,30,47,31,47,31,46,32,46,32,46,33,45,33,45,33,44,33,43,34,43,34,42,35,40,35,39,35,36,35,34,36,32,36,0};

//V
const unsigned char PROGMEM coords_V_01[]={21,55,0,0,8,0,22,40,23,45,24,47,25,49,26,46,26,45,27,42,28,40,42,0,50,0,29,55,21,55};

//W
const unsigned char PROGMEM coords_W_01[]={15,55,0,0,8,0,16,36,18,47,21,37,32,0,40,0,48,28,49,33,50,38,51,43,52,47,55,36,63,0,70,0,56,55,49,55,37,13,36,9,36,7,35,7,34,13,22,55,15,55};

//X
const unsigned char PROGMEM coords_X_01[]={0,55,21,27,2,0,11,0,21,14,23,18,24,19,25,21,26,19,27,18,28,16,30,15,40,0,48,0,29,26,50,55,41,55,27,36,25,32,23,34,22,35,22,36,8,55,0,55};

//Y
const unsigned char PROGMEM coords_Y_01[]={21,55,21,32,0,0,9,0,19,16,25,26,31,16,41,0,50,0,28,32,28,55,21,55};

//Z
const unsigned char PROGMEM coords_Z_01[]={0,55,0,48,28,13,29,12,31,10,32,8,33,7,3,7,3,0,42,0,42,7,11,45,8,48,43,48,43,55,0,55};

//1
const unsigned char PROGMEM coords_1_01[]={20,55,13,55,13,12,13,12,12,13,11,14,9,15,7,16,5,18,4,18,2,19,0,20,0,13,1,13,3,12,4,11,5,10,7,10,8,9,9,8,10,7,11,6,12,5,13,4,13,3,14,2,15,1,15,0,15,0,20,0,20,55};

//2
const unsigned char PROGMEM coords_2_01[]={36,48,36,55,0,55,0,54,0,54,0,53,0,52,0,52,1,51,1,51,1,50,2,49,2,48,2,47,3,46,3,45,4,45,5,43,6,43,7,41,9,39,12,37,14,34,18,31,22,28,23,27,24,25,26,24,26,23,27,22,28,21,29,19,29,19,29,18,29,16,30,16,30,15,30,15,30,13,29,13,29,12,29,12,29,12,29,11,29,10,29,10,28,10,28,9,27,9,27,8,26,7,26,7,26,7,25,7,25,6,24,6,24,6,23,6,23,6,21,6,20,5,19,5,18,5,17,6,16,6,15,6,14,6,14,6,14,7,13,7,12,7,12,7,12,8,12,8,11,9,11,9,11,9,10,10,10,10,10,10,9,11,9,12,9,13,9,13,9,15,9,16,2,15,2,13,2,12,3,10,3,9,4,8,4,7,5,7,5,6,5,5,6,5,6,4,7,4,8,3,8,3,9,2,9,2,11,1,12,1,14,0,16,0,18,0,20,0,21,0,23,0,25,0,26,1,27,1,28,1,29,1,29,2,30,3,30,3,31,3,32,4,33,5,33,6,34,6,34,7,35,7,35,8,35,9,36,10,36,10,36,11,36,12,36,13,36,15,36,16,36,16,36,17,36,18,36,19,36,19,35,21,35,21,35,22,35,23,34,24,33,25,33,25,32,26,32,27,30,28,29,30,27,32,24,34,20,37,15,42,14,43,12,45,12,45,11,46,11,47,10,48,36,48};

//3
const unsigned char PROGMEM coords_3_01[]={0,40,6,39,7,40,7,42,7,43,8,44,9,45,9,46,9,46,10,47,10,47,10,48,11,48,12,49,12,49,13,49,14,49,15,50,16,50,17,50,18,50,19,50,20,49,21,49,21,49,21,49,22,49,22,49,23,48,23,48,24,48,25,46,26,46,26,45,26,45,27,44,27,43,27,43,28,42,28,42,28,41,28,40,28,39,28,37,28,36,28,35,28,35,28,34,27,34,27,33,26,33,26,33,26,32,26,31,25,31,24,30,24,30,23,30,23,29,23,29,22,29,22,28,21,28,21,28,20,28,19,28,18,28,17,28,16,28,16,28,15,28,14,28,13,28,13,23,14,23,14,23,15,23,15,23,16,23,17,22,18,22,19,22,19,22,21,22,22,21,22,21,23,20,23,20,23,19,23,19,24,19,24,19,25,18,25,18,25,17,25,17,25,16,25,16,25,15,26,15,26,13,26,13,25,12,25,11,25,10,25,10,25,10,25,10,25,9,24,9,24,9,23,8,23,7,23,7,22,7,22,7,22,6,22,6,21,6,21,6,21,6,19,6,19,5,18,5,17,5,16,5,15,5,14,6,13,6,12,6,12,7,11,7,10,7,10,8,10,8,9,9,9,9,9,10,8,10,8,12,7,13,7,14,7,15,0,14,1,12,1,10,1,9,2,8,3,7,4,6,5,4,6,3,7,3,8,1,9,1,11,1,12,0,13,0,15,0,17,0,18,0,19,0,20,0,21,0,22,0,23,1,24,1,25,1,26,2,26,3,28,3,28,4,29,4,29,5,30,6,31,7,31,7,31,9,32,9,32,10,32,11,32,12,32,13,32,14,32,15,32,16,32,16,32,17,32,18,31,19,31,19,31,20,30,21,29,22,29,22,28,23,28,24,27,24,26,24,25,25,26,25,27,25,28,26,29,27,30,27,31,28,32,28,32,30,33,30,34,31,34,33,35,34,35,34,35,36,35,37,35,39,35,40,35,42,35,43,34,43,34,44,34,45,34,46,33,46,33,47,32,48,31,49,30,51,29,52,28,52,27,52,26,53,26,54,25,54,24,54,22,55,21,55,19,55,17,55,15,55,13,55,12,55,10,54,9,54,7,53,6,52,5,51,4,50,3,49,2,48,1,46,1,45,0,43,0,42,0,40};

//4
const unsigned char PROGMEM coords_4_01[]={24,55,24,42,0,42,0,36,25,0,31,0,31,36,38,36,38,42,31,42,31,55,24,55};
const unsigned char PROGMEM coords_4_02[]={24,36,24,11,7,36,24,36};

//5
const unsigned char PROGMEM coords_5_01[]={0,39,8,39,8,40,8,41,8,42,9,44,9,44,10,45,10,45,11,46,11,46,11,47,12,47,12,48,14,48,14,48,15,49,16,49,17,49,18,49,19,49,20,49,20,49,21,49,21,48,22,48,23,48,23,48,23,48,24,47,24,47,25,47,26,45,27,45,27,45,27,44,27,44,28,43,28,42,28,41,29,40,29,39,29,37,30,36,29,35,29,33,29,32,28,30,28,30,28,30,28,29,28,29,27,28,27,27,27,27,26,27,26,26,26,26,25,26,24,25,24,25,24,25,23,24,23,24,22,24,21,24,20,24,19,23,18,23,17,23,16,24,15,24,15,24,14,24,14,24,12,24,12,25,11,25,11,26,10,26,9,27,9,27,9,27,8,28,8,29,2,28,7,0,34,0,34,6,12,6,9,21,11,20,12,20,13,19,14,18,15,18,17,18,18,18,20,17,21,18,23,18,24,18,24,18,26,18,26,19,27,19,28,20,28,20,29,20,30,21,31,23,33,24,33,24,34,25,34,26,34,27,35,27,35,28,36,29,36,30,36,32,36,33,36,35,36,37,36,39,36,41,36,42,35,44,34,45,33,47,32,48,31,49,31,50,30,50,29,51,28,51,28,52,27,53,26,53,25,53,24,54,23,54,22,54,21,54,20,54,18,54,16,54,14,54,13,54,11,54,10,53,8,53,7,51,6,50,5,50,3,48,3,47,2,45,2,44,1,42,0,41,0,39};

//6
const unsigned char PROGMEM coords_6_01[]={36,13,28,14,28,13,28,12,28,11,28,10,27,10,27,9,27,9,26,8,25,7,25,7,25,7,24,6,24,6,24,6,23,6,22,6,22,6,22,6,21,6,21,5,19,5,19,5,18,5,17,6,16,6,16,6,15,6,15,6,14,7,13,7,12,8,12,9,11,10,10,10,10,12,9,13,9,13,9,15,8,16,7,18,7,19,7,21,7,22,7,27,7,25,8,25,9,24,10,23,10,22,11,22,12,21,13,21,13,21,15,20,15,20,16,19,18,19,18,19,19,19,20,19,22,19,22,19,24,19,24,19,25,20,25,20,27,21,27,21,28,21,28,21,29,22,30,23,31,24,32,25,33,25,33,26,34,27,34,27,34,28,35,29,35,30,36,31,36,33,36,35,36,37,36,38,36,39,36,40,36,42,36,43,35,44,34,45,34,46,33,48,33,48,32,49,31,50,31,51,30,52,29,52,28,53,27,54,26,54,25,55,24,55,23,55,22,55,21,55,19,55,17,55,16,55,15,55,14,55,13,55,12,54,12,54,11,54,10,53,9,52,9,52,7,51,7,51,6,50,6,49,5,49,4,48,4,47,3,46,3,45,2,43,1,41,1,39,1,36,0,33,0,29,0,25,1,22,1,18,1,15,3,12,3,11,3,10,4,9,4,8,6,7,6,6,7,5,7,4,8,4,9,3,10,3,10,2,11,1,12,1,13,1,14,0,15,0,16,0,16,0,18,0,20,0,21,0,23,0,24,0,25,1,27,1,28,1,30,3,30,3,31,4,32,5,33,6,34,7,34,9,35,10,35,12,36,13};
const unsigned char PROGMEM coords_6_02[]={8,37,8,38,8,39,8,40,9,40,9,42,9,42,9,43,9,44,10,45,10,45,11,46,11,46,12,47,12,48,13,48,13,49,14,49,15,49,16,50,16,50,17,50,18,50,18,51,19,51,19,51,20,51,21,50,21,50,22,50,22,50,22,50,23,49,24,49,24,49,24,49,25,48,25,48,27,47,27,46,27,46,27,46,28,45,28,45,28,44,29,43,29,42,30,40,30,39,30,37,30,36,30,35,29,34,29,33,28,31,28,31,28,30,28,30,27,30,27,29,27,28,26,28,25,28,25,27,24,27,24,27,24,27,23,26,22,26,22,26,22,26,21,25,20,25,19,25,18,25,16,25,16,26,16,26,15,26,15,26,14,27,14,27,13,27,13,27,12,28,11,28,11,29,10,30,10,30,10,30,9,31,9,31,9,32,9,33,9,34,8,35,8,36,8,37};

//7
const unsigned char PROGMEM coords_7_01[]={0,6,0,0,36,0,36,5,34,6,33,8,31,10,30,12,28,15,26,20,23,24,21,29,19,34,18,39,17,42,16,46,15,50,15,54,8,54,8,52,8,50,8,48,9,47,9,42,11,38,12,33,14,29,15,25,18,21,20,17,22,13,24,9,26,8,27,6,0,6};

//8
const unsigned char PROGMEM coords_8_01[]={10,25,10,24,9,24,8,24,7,23,6,22,6,22,5,21,4,21,4,20,4,19,3,18,3,18,3,16,3,16,3,15,3,14,3,12,3,11,3,10,3,10,3,9,3,8,4,7,4,7,4,6,5,6,5,5,6,5,7,4,7,3,8,3,9,2,9,2,10,1,10,1,11,1,12,1,13,0,15,0,16,0,18,0,20,0,21,0,23,0,25,1,25,1,26,1,27,1,27,2,28,3,28,3,29,3,30,4,31,5,31,6,32,7,32,7,33,8,33,9,33,9,33,10,34,10,34,11,34,12,34,14,34,15,34,16,34,16,33,18,33,18,33,19,33,20,32,21,31,21,31,22,30,22,30,23,28,24,28,24,27,24,26,25,27,25,28,26,30,27,30,27,31,28,32,28,33,30,34,30,34,31,35,32,35,33,36,34,36,36,36,36,36,37,36,39,36,40,36,42,36,43,36,44,35,45,35,45,34,46,34,47,34,48,33,48,33,49,31,51,31,51,30,52,29,52,28,53,28,53,27,54,27,54,25,54,24,55,22,55,20,55,18,55,16,55,15,55,13,55,11,54,10,54,9,54,9,53,8,53,7,52,6,52,6,51,5,51,4,49,3,49,3,48,3,48,2,47,2,46,1,45,1,45,1,44,1,43,1,42,0,40,0,39,0,37,0,36,1,35,1,34,1,33,2,32,2,31,3,30,4,29,4,28,5,27,6,27,7,26,8,25,9,25,10,25};
const unsigned char PROGMEM coords_8_02[]={9,13,9,15,9,15,10,16,10,16,10,17,10,17,10,18,10,18,10,18,11,19,11,19,12,19,12,20,12,20,12,21,13,21,13,21,13,21,14,21,14,21,15,22,15,22,16,22,17,22,18,22,19,22,20,22,21,22,22,22,22,21,22,21,23,21,23,21,24,21,24,21,25,20,25,19,25,18,26,18,26,18,26,18,27,17,27,16,27,16,27,16,27,15,27,15,27,14,27,13,27,12,27,11,27,11,27,10,26,10,26,10,26,9,25,9,25,8,24,7,24,7,23,6,23,6,22,6,22,6,22,6,21,6,21,6,20,5,19,5,18,5,17,5,16,5,15,6,15,6,14,6,14,6,13,6,13,6,13,7,12,7,12,7,11,8,10,9,10,9,10,9,10,10,10,10,10,10,10,11,9,12,9,12,9,13,9,13};
const unsigned char PROGMEM coords_8_03[]={7,39,7,39,7,40,7,41,7,42,7,42,7,43,8,43,8,45,9,45,9,46,9,46,10,47,10,47,11,48,12,48,12,49,13,49,13,49,14,49,15,49,16,50,16,50,17,50,18,50,19,50,20,50,21,49,22,49,22,49,23,49,24,49,24,49,24,48,25,48,25,48,26,47,27,46,27,46,27,45,28,45,28,45,28,44,28,43,28,43,28,42,29,41,29,40,29,39,29,38,29,37,28,36,28,35,28,34,28,34,28,34,28,33,27,33,27,32,27,32,26,31,25,30,25,30,24,30,24,29,23,29,22,29,22,28,22,28,21,28,20,28,19,28,18,28,16,28,15,28,15,28,14,28,13,28,13,29,12,29,12,29,12,30,11,30,11,30,10,31,9,32,9,32,9,33,8,33,8,34,8,34,7,34,7,35,7,36,7,37,7,37,7,39};

//9
const unsigned char PROGMEM coords_9_01[]={1,42,7,41,8,42,8,43,9,45,9,45,9,46,10,46,10,47,10,47,10,48,11,48,12,48,12,49,13,49,13,49,14,49,15,50,16,50,17,50,18,50,18,50,19,49,19,49,20,49,21,49,22,49,22,48,23,48,23,48,24,47,24,47,25,46,25,46,25,45,26,45,27,44,27,43,27,43,27,42,28,41,28,40,28,38,29,36,29,34,30,32,30,30,30,29,29,30,28,30,28,31,27,31,27,32,25,33,25,33,24,34,23,34,22,35,21,35,20,36,19,36,18,36,18,36,16,36,15,36,13,36,12,36,12,35,11,35,10,35,9,34,9,34,8,34,7,33,6,32,5,31,4,30,4,30,3,29,3,28,3,28,2,27,1,26,1,25,1,24,0,22,0,20,0,18,0,16,1,14,1,12,1,10,2,10,2,9,3,8,3,7,3,7,4,6,4,6,5,4,6,3,7,3,8,3,9,2,9,1,10,1,10,1,12,1,12,0,13,0,14,0,16,0,18,0,19,0,20,0,21,0,22,0,24,1,25,1,26,2,27,3,28,3,29,4,30,5,31,6,32,7,33,8,33,9,34,10,34,12,35,13,35,15,35,17,35,19,36,21,36,24,36,26,36,31,35,33,35,36,35,37,35,39,34,41,34,43,33,44,33,46,32,47,31,48,30,49,29,51,28,51,27,52,26,53,25,54,24,54,22,55,21,55,19,55,18,55,16,55,15,55,13,55,12,55,11,55,9,54,8,54,7,52,6,52,6,51,5,51,4,51,4,50,3,49,3,48,2,46,2,45,1,43,1,42};
const unsigned char PROGMEM coords_9_02[]={29,18,29,17,29,15,28,14,28,13,28,12,28,12,27,11,27,10,27,10,26,9,26,9,25,8,24,7,24,7,24,7,23,7,22,6,22,6,22,6,21,6,21,6,20,6,19,6,19,6,19,6,18,6,18,6,17,6,16,6,16,6,15,6,15,6,15,7,14,7,13,7,13,7,12,7,12,9,11,9,10,10,10,10,9,11,9,12,9,12,8,13,8,15,7,16,7,17,7,19,7,20,7,21,8,22,8,24,9,24,9,24,9,25,9,25,9,26,10,27,10,27,10,27,12,28,12,28,13,29,13,29,13,30,14,30,15,30,15,30,16,30,16,30,17,30,18,30,19,30,21,30,21,30,22,30,22,30,22,30,23,30,24,29,24,29,24,28,25,28,25,28,26,27,27,27,27,27,27,26,27,25,28,25,28,24,28,24,28,22,29,21,29,19,29,18};

//0
const unsigned char PROGMEM coords_0_01[]={0,28,0,23,0,21,0,19,0,17,1,15,1,13,1,12,2,10,3,9,3,8,4,7,5,6,6,4,7,4,7,3,9,2,10,1,11,1,12,0,13,0,15,0,16,0,18,0,19,0,19,0,21,0,22,0,22,0,24,1,24,1,25,1,26,2,27,3,27,3,28,4,29,4,30,5,30,6,31,6,31,7,31,8,32,9,33,10,33,11,33,12,34,13,34,15,34,16,34,17,35,19,35,20,35,24,35,28,35,32,35,34,35,36,34,38,34,40,34,42,33,43,33,45,32,46,31,47,31,48,30,49,29,51,28,51,27,52,27,53,25,54,24,54,23,55,22,55,20,55,19,55,18,55,15,55,15,55,13,55,13,55,12,55,11,54,10,54,10,54,9,53,8,53,7,52,7,52,6,51,6,51,5,50,4,49,4,48,3,47,3,46,2,43,1,41,0,38,0,34,0,31,0,28};
const unsigned char PROGMEM coords_0_02[]={6,28,6,31,6,34,7,37,7,39,7,41,8,43,8,44,9,45,9,45,9,46,10,47,10,48,11,48,12,48,12,49,12,49,13,49,13,49,14,50,15,50,15,50,15,50,16,50,16,51,17,51,18,51,18,50,19,50,19,50,20,50,21,50,21,49,21,49,22,49,22,49,23,48,23,48,24,48,24,47,25,46,25,45,25,45,26,44,26,43,27,41,27,39,28,37,28,34,28,31,28,28,28,25,28,22,28,19,27,17,27,15,26,13,26,12,25,11,25,10,25,10,24,9,24,9,23,8,23,7,22,7,22,7,21,7,21,6,21,6,20,6,19,6,19,6,18,6,18,6,17,6,16,6,16,6,15,6,15,6,15,6,14,6,13,6,13,7,12,7,12,7,12,7,11,8,11,8,10,9,10,9,10,10,9,10,9,11,9,12,8,13,7,15,7,16,7,19,6,22,6,25,6,28};
'''

class CNC:
  
    def __init__(self, pi, SENSOR_X, SERVO_X, SWITCH_X,
                 SENSOR_Y, SERVO_Y, SWITCH_Y, SENSOR_Z,
                 SERVO_Z, SWITCH_Z):

        # Link to the PiGPIO daemon
        self.pi = pi
                        
        # GPIO pins for rotation sensor, servo PWM and limit switch
        self.SENSOR_X = SENSOR_X
        self.SERVO_X = SERVO_X
        self.SWITCH_X = SWITCH_X

        self.SENSOR_Y = SENSOR_Y
        self.SERVO_Y = SERVO_Y
        self.SWITCH_Y = SWITCH_Y

        self.SENSOR_Z = SENSOR_Z
        self.SERVO_Z = SERVO_Z
        self.SWITCH_Z = SWITCH_Z

        self.pi.set_mode(self.SENSOR_X, pigpio.INPUT)
        self.pi.set_mode(self.SERVO_X, pigpio.OUTPUT)
        self.pi.set_mode(self.SWITCH_X, pigpio.INPUT)

        self.pi.set_mode(self.SENSOR_Y, pigpio.INPUT)
        self.pi.set_mode(self.SERVO_Y, pigpio.OUTPUT)
        self.pi.set_mode(self.SWITCH_Y, pigpio.INPUT)

        self.pi.set_mode(self.SENSOR_Z, pigpio.INPUT)
        self.pi.set_mode(self.SERVO_Z, pigpio.OUTPUT)
        self.pi.set_mode(self.SWITCH_Z, pigpio.INPUT)

        self.X = 0
        self.Y = 0
        self.isPenUp = True
        
        self.PEN_HUB = 10
        
        # Servo pulse widths to move continuous-rotation servos
        self.CENTRE = 1500  # off
        self.INWARD = 2000  # clockwise
        self.OUTWARD = 1000 # anticlockwise
        
        
    # Move servos one step by turning them on for a short
    # time and checking for a pulse on the rotation switch.

    def makeStepX(direction):

  #char stringX[4];
  #char stringY[4];

  #unsigned long timeNow;
  #unsigned long timeY;

  #servoX.attach(SERVO_X);
        self.pi.set_servo_pulsewidth(self.SERVO_X, self.CENTRE)

        if direction==0:
            self.pi.set_servo_pulsewidth(self.SERVO_X, self.OUTWARD)
        else:
            self.pi.set_servo_pulsewidth(self.SERVO_X, self.INWARD)

        while self.pi.read(self.SENSOR_X):
            pass

        timeX = time.time()
        timeNow = time.time()

        if (timeX > timeNow):
            timeX = timeNow

        while(timeNow - timeX < 0.2){
            if not(self.pi.read(self.SENSOR_X)):
                timeX = time.time()

            timeNow = time.time()
            if (timeX > timeNow):
                timeX = timeNow

  #servoX.detach();
        self.pi.set_servo_pulsewidth(self.SERVO_X, 0)
    
        if direction==0:
            self.X++
        else:
            self.X--
 

#  sprintf(stringX, "% 3d", X);
#  sprintf(stringY, "% 3d", Y);
#  lcd.setCursor(0, 1);lcd.print("   X=");lcd.print(stringX);lcd.print(", Y=");lcd.print(stringY);lcd.print("    ");




void makeStepY(int direction){
  char stringX[4];
  char stringY[4];

  unsigned long timeNow;
  unsigned long timeY;

  servoY.attach(SERVO_Y);

  if(direction==0){
    servoY.write(0);
  }
  else{
    servoY.write(180);
  }

  while(digitalRead(SENSOR_Y)==1);

  timeY = millis();
  timeNow = millis();
  if(timeY > timeNow){
    timeY = timeNow;
  }
  while(timeNow - timeY < 200){
    if(digitalRead(SENSOR_Y)==0){
      timeY = millis();
    }
    timeNow = millis();
    if(timeY > timeNow){
      timeY = timeNow;
    }
  }

  servoY.detach();

  if(direction == 0){
    Y++;
  }
  else{
    Y--;
  }

  sprintf(stringX, "% 3d", X);
  sprintf(stringY, "% 3d", Y);
  lcd.setCursor(0, 1);lcd.print("   X=");lcd.print(stringX);lcd.print(", Y=");lcd.print(stringY);lcd.print("    ");
}

void makeStepZ(int direction){
  unsigned long timeNow;
  unsigned long timeZ;

  servoZ.attach(SERVO_Z);

  if(direction==0){
    servoZ.write(0);
  }
  else{
    servoZ.write(180);
  }

  while(digitalRead(SENSOR_Z)==1);

  timeZ = millis();
  timeNow = millis();
  if(timeZ > timeNow){
    timeZ = timeNow;
  }
  while(timeNow - timeZ < 200){
    if(digitalRead(SENSOR_Z)==0){
      timeZ = millis();
    }
    timeNow = millis();
    if(timeZ > timeNow){
      timeZ = timeNow;
    }
  }

  servoZ.detach();

}

    def initX(self):
    # Move X servo to home position by driving clockwise until the limit switch is actuated.
#  servoX.attach(SERVO_X);
#  servoX.write(180);
        self.pi.set_servo_pulsewidth(self.SERVO_X, self.INWARD)
#   while(digitalRead(SWITCH_X) == 1);
        while self.pi.read(self.SENSOR_X):
            pass
#  servoX.detach();
        self.pi.set_servo_pulsewidth(self.SERVO_X, 0)

            
    def initY(self):
    # Move Y servo to home position by driving clockwise until the limit switch is actuated.
        self.pi.set_servo_pulsewidth(self.SERVO_Y, self.INWARD)
        while self.pi.read(self.SENSOR_Y):
            pass
        self.pi.set_servo_pulsewidth(self.SERVO_Y, 0)

            
    def initZ(self):
    # Move Z servo to home position by driving clockwise until the limit switch is actuated.
        self.pi.set_servo_pulsewidth(self.SERVO_Z, self.INWARD)
        while self.pi.read(self.SENSOR_Z):
            pass
        self.pi.set_servo_pulsewidth(self.SERVO_Z, 0)
        self.isPenUp = True


    def penDown(self):
        if isPenUp:
            for i in range(self.PEN_HUB):
                self.makeStepZ(0)
    
        self.isPenUp = 0;

            
    def penUp(self):
        self.initZ();


void moveToXY(unsigned int newX, unsigned int newY){
  int directionX = 0;
  int directionY = 0;
  unsigned int diffX;
  unsigned int diffY;
  unsigned int i;
  double stepDiff = 0.0;
  double stepDiffRest = 0.0;
  char stringX[4];
  char stringY[4];

  sprintf(stringX, "% 3d", newX);
  sprintf(stringY, "% 3d", newY);
  lcd.setCursor(0, 0);lcd.print("GoTo ");lcd.print(stringX);lcd.print(",   ");lcd.print(stringY);lcd.print("   ");

  if(X < newX){
    directionX = 0;
    diffX = newX - X;
  }
  else{
    directionX = 1;
    diffX = X - newX;
  }

  if(Y < newY){
    directionY = 0;
    diffY = newY - Y;
  }
  else{
    directionY = 1;
    diffY = Y - newY;
  }

  if(diffX == 0 && diffY == 0){
    return;
  }

  if(diffX > diffY){
    stepDiff = (double)(diffY)/(double)(diffX);
    for(i=0; i < diffX; i++){
      makeStepX(directionX);
      stepDiffRest += stepDiff;
      if(stepDiffRest >= 1.0){
        stepDiffRest -= 1.0;
        makeStepY(directionY);
      }
    }
  }
  else{
    stepDiff = (double)(diffX)/(double)(diffY);
    for(i=0; i < diffY; i++){
      stepDiffRest += stepDiff;
      if(stepDiffRest >= 1.0){
        stepDiffRest -= 1.0;
        makeStepX(directionX);
      }
      makeStepY(directionY);
    }
  }

  while(X != newX){
    makeStepX(directionX);
  }

  while(Y != newY){
    makeStepY(directionY);
  }
}

void plotCoordinates(const unsigned char *buffer, unsigned int bufferSize){

//lcd.setCursor(0, 1);lcd.print("bufferSize=");lcd.print(bufferSize);lcd.print(" ");
//delay(10000);

  unsigned int i;
  unsigned char cx;
  unsigned char cy;

  penUp();
  for(i=0; i<bufferSize; i+=2){
    cx =  pgm_read_byte_near(buffer + i);
    cy =  pgm_read_byte_near(buffer + i + 1);
    moveToXY(cx, cy);
    if(i==0){
      penDown();
    }
//lcd.setCursor(10, 1);lcd.print("i=");lcd.print(i);lcd.print(" ");
    //delay(1000);
  }

  penUp();

}

void plot(int character){
  lcd.setCursor(0, 0);lcd.print("Plotting no");lcd.print(character);lcd.print(" ");
  lcd.setCursor(0, 0);lcd.print("in 3 seconds    ");
  delay(1000);
  lcd.setCursor(0, 0);lcd.print("in 2 seconds    ");
  delay(1000);
  lcd.setCursor(0, 0);lcd.print("in 1 seconds    ");
  delay(1000);

  if(character == 1){// A
    plotCoordinates(coords_A_01, sizeof(coords_A_01));
    plotCoordinates(coords_A_02, sizeof(coords_A_02));
  }

  if(character == 2){// B
    plotCoordinates(coords_B_01, sizeof(coords_B_01));
    plotCoordinates(coords_B_02, sizeof(coords_B_02));
    plotCoordinates(coords_B_03, sizeof(coords_B_03));
  }

  if(character == 3){// C
    plotCoordinates(coords_C_01, sizeof(coords_C_01));
  }

  if(character == 4){// D
    plotCoordinates(coords_D_01, sizeof(coords_D_01));
    plotCoordinates(coords_D_02, sizeof(coords_D_02));
  }

  if(character == 5){// E
    plotCoordinates(coords_E_01, sizeof(coords_E_01));
  }

  if(character == 6){// F
    plotCoordinates(coords_F_01, sizeof(coords_F_01));
  }

  if(character == 7){// G
    plotCoordinates(coords_G_01, sizeof(coords_G_01));
  }

  if(character == 8){// H
    plotCoordinates(coords_H_01, sizeof(coords_H_01));
    plotCoordinates(coords_D_02, sizeof(coords_D_02));
  }

  if(character == 9){// I
    plotCoordinates(coords_I_01, sizeof(coords_I_01));
  }

  if(character == 10){// J
    plotCoordinates(coords_J_01, sizeof(coords_J_01));
  }

  if(character == 11){// K
    plotCoordinates(coords_K_01, sizeof(coords_K_01));
  }

  if(character == 12){// L
    plotCoordinates(coords_L_01, sizeof(coords_L_01));
  }

  if(character == 13){// M
    plotCoordinates(coords_M_01, sizeof(coords_M_01));
  }

  if(character == 14){// N
    plotCoordinates(coords_N_01, sizeof(coords_N_01));
  }

  if(character == 15){// O
    plotCoordinates(coords_O_01, sizeof(coords_O_01));
    plotCoordinates(coords_O_02, sizeof(coords_O_02));
  }

  if(character == 16){// P
    plotCoordinates(coords_P_01, sizeof(coords_P_01));
    plotCoordinates(coords_P_02, sizeof(coords_P_02));
  }

  if(character == 17){// Q
    plotCoordinates(coords_Q_01, sizeof(coords_Q_01));
    plotCoordinates(coords_Q_02, sizeof(coords_Q_02));
  }

  if(character == 18){// R
    plotCoordinates(coords_R_01, sizeof(coords_R_01));
    plotCoordinates(coords_R_02, sizeof(coords_R_02));
  }

  if(character == 19){// S
    plotCoordinates(coords_S_01, sizeof(coords_S_01));
  }

  if(character == 20){// T
    plotCoordinates(coords_T_01, sizeof(coords_T_01));
  }

  if(character == 21){// U
    plotCoordinates(coords_U_01, sizeof(coords_U_01));
  }

  if(character == 22){// V
    plotCoordinates(coords_V_01, sizeof(coords_V_01));
  }

  if(character == 23){// W
    plotCoordinates(coords_W_01, sizeof(coords_W_01));
  }

  if(character == 24){// X
    plotCoordinates(coords_X_01, sizeof(coords_X_01));
  }

  if(character == 25){// Y
    plotCoordinates(coords_Y_01, sizeof(coords_Y_01));
  }

  if(character == 26){// Z
    plotCoordinates(coords_Z_01, sizeof(coords_Z_01));
  }

  if(character == 27){// 0
    plotCoordinates(coords_0_01, sizeof(coords_0_01));
    plotCoordinates(coords_0_02, sizeof(coords_0_02));
  }

  if(character == 28){// 1
    plotCoordinates(coords_1_01, sizeof(coords_1_01));
  }

  if(character == 29){// 2
    plotCoordinates(coords_2_01, sizeof(coords_2_01));
  }

  if(character == 30){// 3
    plotCoordinates(coords_3_01, sizeof(coords_3_01));
  }

  if(character == 31){// 4
    plotCoordinates(coords_4_01, sizeof(coords_4_01));
    plotCoordinates(coords_4_02, sizeof(coords_4_02));
  }

  if(character == 32){// 5
    plotCoordinates(coords_5_01, sizeof(coords_5_01));
  }

  if(character == 33){// 6
    plotCoordinates(coords_6_01, sizeof(coords_6_01));
    plotCoordinates(coords_6_02, sizeof(coords_6_02));
  }

  if(character == 34){// 7
    plotCoordinates(coords_7_01, sizeof(coords_7_01));
  }

  if(character == 35){// 8
    plotCoordinates(coords_8_01, sizeof(coords_8_01));
    plotCoordinates(coords_8_02, sizeof(coords_8_02));
    plotCoordinates(coords_8_03, sizeof(coords_8_03));
  }

  if(character == 36){// 9
    plotCoordinates(coords_9_01, sizeof(coords_9_01));
    plotCoordinates(coords_9_02, sizeof(coords_9_02));
  }



  penUp();
  //goto coordinates 0, 0
  initX();
  initY();
  X = 0;
  Y = 0;

}

def setup(pi):

#  // set up the LCD's number of columns and rows:
#  lcd.begin(16, 2);
#  // Print a message to the LCD.
#  lcd.setCursor(0, 0);
#  lcd.print("HomoFaciens.de");
#  lcd.setCursor(0, 1);
#  lcd.print("Initializing   Z");

    print("Homofaciens.de")
    print("CNC v3.0")




  pinMode(SENSOR_X, INPUT);
  digitalWrite(SENSOR_X, HIGH);
  pinMode(SWITCH_X, INPUT);
  digitalWrite(SWITCH_X, HIGH);

  pinMode(SENSOR_Y, INPUT);
  digitalWrite(SENSOR_Y, HIGH);
  pinMode(SWITCH_Y, INPUT);
  digitalWrite(SWITCH_Y, HIGH);

  pinMode(SENSOR_Z, INPUT);
  digitalWrite(SENSOR_Z, HIGH);
  pinMode(SWITCH_Z, INPUT);
  digitalWrite(SWITCH_Z, HIGH);

#  pinMode(MENU_ENTER, INPUT);
#  digitalWrite(MENU_ENTER, HIGH);
#  pinMode(MENU_PLUS, INPUT);
#  digitalWrite(MENU_PLUS, HIGH);
#  pinMode(MENU_MINUS, INPUT);
#  digitalWrite(MENU_MINUS, HIGH);

    print("Initializing Z")
    initZ()
#  lcd.setCursor(0, 1);
#  lcd.print("Initializing   Y");
    print("Initializing Y")
    initY()
#  lcd.setCursor(0, 1);
#  lcd.print("Initializing   X");
    print("Initializing X")
    initX()
#  lcd.setCursor(0, 1);
#  lcd.print("Ready to run    ");

    print("Ready to run.")

    X = 0
    Y = 0
    menueLevel = 1
    menueSubLevel = 0
    selectedChar = 1


void loop(){
  if(menueSubLevel == 0){
    lcd.setCursor(0, 0);
    lcd.print("Main menue:     ");
    lcd.setCursor(0, 1);
    if(menueLevel == 1){
      lcd.print("Plot character  ");
    }
    if(menueLevel == 2){
      lcd.print("Move X          ");
    }
    if(menueLevel == 3){
      lcd.print("Move Y          ");
    }
    if(menueLevel == 4){
      lcd.print("Move Z          ");
    }
    if(menueLevel == 5){
      lcd.print("Pen UP / DOWN   ");
    }
  }

  while(menueSubLevel == 1){
    lcd.setCursor(0, 0);
    if(selectedChar < 27){
      lcd.print("Selected char: ");lcd.print((char)(selectedChar + 64));
    }
    else{
      lcd.print("Selected char: ");lcd.print((char)(selectedChar + 21));
    }
    lcd.setCursor(0, 1);
    lcd.print("+/- Select char ");

    if(digitalRead(MENU_ENTER)==0){
      menueSubLevel = MAX_MENUE + 1;
    }

    if(digitalRead(MENU_PLUS)==0){
      selectedChar++;
    }
    if(digitalRead(MENU_MINUS)==0){
      selectedChar--;
    }

    if(selectedChar < 1){
      selectedChar = 36;
    }
    if(selectedChar > 36){
      selectedChar = 1;
    }

    while(digitalRead(MENU_ENTER)==0 || digitalRead(MENU_PLUS)==0 || digitalRead(MENU_MINUS)==0){
      delay(100);
    }
  }

  while(menueSubLevel == MAX_MENUE + 1){
    lcd.setCursor(0, 0);
    lcd.print("Press - to plot ");
    lcd.setCursor(0, 1);
    if(selectedChar < 27){
      lcd.print("character ");lcd.print((char)(selectedChar + 64));lcd.print("     ");
    }
    else{
      lcd.print("character ");lcd.print((char)(selectedChar + 21));lcd.print("     ");
    }

    if(digitalRead(MENU_MINUS)==0){
      plot(selectedChar);
      menueSubLevel = 0;
    }

    if(digitalRead(MENU_PLUS)==0){
      menueSubLevel = 0;
    }
    if(digitalRead(MENU_ENTER)==0){
      menueSubLevel = 0;
    }

    while(digitalRead(MENU_ENTER)==0 || digitalRead(MENU_PLUS)==0 || digitalRead(MENU_MINUS)==0){
      delay(100);
    }
  }

  if(menueSubLevel == 2){
    lcd.setCursor(0, 0);
    lcd.print("Move X          ");
    lcd.setCursor(0, 1);
    lcd.print("+/- Move X axis ");
    if(digitalRead(MENU_PLUS)==0){
      makeStepX(0);
    }
    if(digitalRead(MENU_MINUS)==0){
      if(digitalRead(SWITCH_X) == 1){
        makeStepX(1);
      }
    }
  }

  if(menueSubLevel == 3){
    lcd.setCursor(0, 0);
    lcd.print("Move Y          ");
    lcd.setCursor(0, 1);
    lcd.print("+/- Move Y axis ");
    if(digitalRead(MENU_PLUS)==0){
      makeStepY(0);
    }
    if(digitalRead(MENU_MINUS)==0){
      if(digitalRead(SWITCH_Y) == 1){
        makeStepY(1);
      }
    }
  }

  if(menueSubLevel == 4){
    lcd.setCursor(0, 0);
    lcd.print("Move Z          ");
    lcd.setCursor(0, 1);
    lcd.print("+/- Move Z axis ");
    if(digitalRead(MENU_PLUS)==0){
      makeStepZ(0);
    }
    if(digitalRead(MENU_MINUS)==0){
      if(digitalRead(SWITCH_Z) == 1){
        makeStepZ(1);
      }
    }
  }

  if(menueSubLevel == 5){
    lcd.setCursor(0, 0);
    lcd.print("Pen UP / DOWN   ");
    lcd.setCursor(0, 1);
    lcd.print("+ UP / - DOWN   ");
    if(digitalRead(MENU_PLUS)==0){
      penUp();
    }
    if(digitalRead(MENU_MINUS)==0){
      penDown();
    }
  }


  if(menueSubLevel == 0){
    if(digitalRead(MENU_PLUS)==0){
      menueLevel++;
    }
    if(digitalRead(MENU_MINUS)==0){
      menueLevel--;
    }

    if(menueLevel < 1){
      menueLevel = MAX_MENUE;
    }
    if(menueLevel > MAX_MENUE){
      menueLevel = 1;
    }
  }

  if(digitalRead(MENU_ENTER)==0){
    if(menueSubLevel == 0){
      menueSubLevel = menueLevel;
    }
    else{
      menueSubLevel = 0;
    }
  }

  while(digitalRead(MENU_ENTER)==0 || digitalRead(MENU_PLUS)==0 || digitalRead(MENU_MINUS)==0){
    delay(100);
  }
}


if __name__ == "__main__":
    pi = pigpio.pi()
    if not pi.connected:
        print("Could not connect to PiGPIO.  Is pigpiod running?  Try 'sudo pigpiod'.")
        exit()
    
    setup()
    loop()
